{"version":3,"sources":["./src/app/registration/registration.page.html","./src/app/registration/registration-routing.module.ts","./src/app/registration/registration.module.ts","./src/app/registration/registration.page.scss","./src/app/registration/registration.page.ts"],"names":[],"mappings":"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","file":"registration-registration-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [hidden]=\\\"isDoctor\\\" [formGroup]=\\\"doctorRegister\\\">\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Nombre</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"name\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(dname.dirty || dname.touched) && dname.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"dname.errors?.required\\\">Ingresa tu nombre</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Apellidos</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(dlname.dirty || dlname.touched) && dlname.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"dlname.errors?.required\\\">Ingresa tus apellidos</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Calle</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"street\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(dstreet.dirty || dstreet.touched) && dstreet.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"dstreet.errors?.required\\\">Ingresa tu direcci贸n</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">C贸digo Postal</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"cp\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(dcp.dirty || dcp.touched) && dcp.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"dcp.errors?.required\\\">Ingresa tu c贸digo postal</span>\\n      <span *ngIf=\\\"dcp.errors?.minlength\\\">El c贸digo postal no es valido</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Cedula profesional</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"cedprof\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(cprof.dirty || cprof.touched) && cprof.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"cprof.errors?.required\\\">Ingresa tu cedula profesional</span>\\n      <span *ngIf=\\\"cprof.errors?.minlength\\\">La cedula no es v谩lida</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(demail.dirty || demail.touched) && demail.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"demail.errors?.required\\\">Ingresa el correo</span>\\n      <span *ngIf=\\\"demail.errors?.email\\\">El correo no es v谩lido</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(dpassword.dirty || dpassword.touched) && dpassword.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"dpassword.errors?.required\\\">Ingresa el password</span>\\n      <span *ngIf=\\\"dpassword.errors?.minlength\\\">El password no es correcto</span>\\n    </div>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"registrarDoctor()\\\">Registrarse</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n\\n  <form [hidden]=\\\"!isDoctor\\\" [formGroup]=\\\"patientRegister\\\">\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Nombre</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"name\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(pname.dirty || pname.touched) && pname.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"pname.errors?.required\\\">Ingresa tu nombre</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Apellidos</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(plname.dirty || plname.touched) && plname.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"plname.errors?.required\\\">Ingresa tus apellidos</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">NSS</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"nss\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(pnss.dirty || pnss.touched) && pnss.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"pnss.errors?.required\\\">Ingresa tu n煤mero de seguridad social</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Poliza</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"poliza\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(ppoliza.dirty || ppoliza.touched) && ppoliza.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"ppoliza.errors?.required\\\">Ingresa tu n煤mero de poliza</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(pemail.dirty || pemail.touched) && pemail.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"pemail.errors?.required\\\">Ingresa el correo</span>\\n      <span *ngIf=\\\"pemail.errors?.email\\\">El correo no es v谩lido</span>\\n    </div>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" required></ion-input>\\n    </ion-item>\\n    <div *ngIf=\\\"(ppassword.dirty || ppassword.touched) && ppassword.errors\\\" class=\\\"errors\\\">\\n      <span *ngIf=\\\"ppassword.errors?.required\\\">Ingresa el password</span>\\n      <span *ngIf=\\\"ppassword.errors?.minlength\\\">El password no es correcto</span>\\n    </div>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button type=\\\"submit\\\" color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"registrarPaciente()\\\">Registrarse</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n\\n  <ion-item>\\n    <ion-label>Registrarte como doctor</ion-label>\\n    <ion-toggle (ionChange)=\\\"changeDoctorValue($event)\\\"></ion-toggle>\\n  </ion-item>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistrationPage } from './registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistrationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistrationPageRoutingModule } from './registration-routing.module';\n\nimport { RegistrationPage } from './registration.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RegistrationPageRoutingModule,\n        ReactiveFormsModule\n    ],\n  declarations: [RegistrationPage]\n})\nexport class RegistrationPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {ToastController} from '@ionic/angular';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport {GlobalConstants} from '../common/global-constants';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.page.html',\n  styleUrls: ['./registration.page.scss'],\n})\nexport class RegistrationPage implements OnInit {\n  isDoctor: boolean;\n  jsonobj: any;\n  doctorRegister: FormGroup;\n  patientRegister: FormGroup;\n\n  constructor(\n      private fb: FormBuilder,\n      private http: HTTP,\n      private router: Router,\n      public toastController: ToastController\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.isDoctor = true;\n\n    this.doctorRegister = this.fb.group({\n      name: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      street: ['', [Validators.required]],\n      cp: ['', [Validators.required, Validators.minLength(5)]],\n      cedprof: ['', [Validators.required, Validators.minLength(6)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n\n    this.patientRegister = this.fb.group({\n      name: ['', [Validators.required]],\n      lastname: ['', [Validators.required]],\n      nss: ['', [Validators.required]],\n      poliza: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  async presentToast(message: string = 'Alert in process.', duration: number = 1200 ) {\n    const toast = await this.toastController.create({\n      message,\n      duration\n    });\n    toast.present();\n  }\n\n  changeDoctorValue($event: any) {\n    this.isDoctor = !this.isDoctor;\n  }\n\n  registrarDoctor() {\n    const regDoct = {\n      \"nombre\": String(this.doctorRegister.value.name) + ' ' + String(this.doctorRegister.value.lastname),\n      \"direccion\": [{\"calle\": String(this.doctorRegister.value.street), \"cp\": String(this.doctorRegister.value.cp)}],\n      \"cedula\": String(this.doctorRegister.value.cedprof)\n    };\n    this.http.setDataSerializer('json');\n    this.http.post(GlobalConstants.dbURL + 'doctores/', regDoct, { 'Content-Type': 'application/json' })\n        .then(data => {\n          this.jsonobj = JSON.parse(data.data);\n          this.presentToast('HTTP Request Success => uid ' + this.jsonobj.id);\n        })\n        .catch(error => {\n          this.presentToast('HTTP Request Error: ' + error.error);\n        });\n\n    const regLogin = {\n      \"id\": String(this.doctorRegister.value.email),\n      \"contrase帽a\": String(this.doctorRegister.value.password) + '',\n      \"type\": \"doctor\",\n      \"uid\": String(this.jsonobj.id)\n    };\n    this.http.setDataSerializer('json');\n    this.http.post(GlobalConstants.dbURL + 'login/', regLogin, { 'Content-Type': 'application/json' })\n        .then(data => {\n          this.jsonobj = JSON.parse(data.data);\n          this.presentToast('HTTP Request Success: ' + this.jsonobj, 3000);\n        })\n        .catch(error => {\n          this.presentToast('HTTP Request Error: ' + error.error);\n        });\n\n    this.presentToast('this.doctorRegister.value.name: \\n' + this.doctorRegister.value.name +\n        '\\nthis.doctorRegister.value.email:\\n' + this.doctorRegister.value.email +\n        '\\nthis.doctorRegister.value.type:\\n' + 'doctor', 3000);\n\n    this.router.navigateByUrl('/home-doctor', { replaceUrl: true });\n  }\n\n  registrarPaciente() {\n    const regDoct = {\n      \"nombre\": String(this.patientRegister.value.name) + ' ' + String(this.patientRegister.value.lastname),\n      \"nss\": String(this.patientRegister.value.nss),\n      \"poliza\": String(this.patientRegister.value.poliza)\n    };\n\n    this.http.setDataSerializer('json');\n    this.http.post(GlobalConstants.dbURL + 'pacientes/', regDoct, { 'Content-Type': 'application/json' })\n        .then(data => {\n          this.jsonobj = JSON.parse(data.data);\n          this.presentToast('HTTP Request Success => uid ' + this.jsonobj.id);\n        })\n        .catch(error => {\n          this.presentToast('HTTP Request Error: ' + error.error);\n        });\n\n    const regLogin = {\n      \"id\": String(this.doctorRegister.value.email),\n      \"contrase帽a\": String(this.doctorRegister.value.password) + '',\n      \"type\": \"patient\",\n      \"uid\": String(this.jsonobj.id)\n    };\n    this.http.setDataSerializer('json');\n    this.http.post(GlobalConstants.dbURL + 'login/', regLogin, { 'Content-Type': 'application/json' })\n        .then(data => {\n          this.jsonobj = JSON.parse(data.data);\n          this.presentToast('HTTP Request Success: ' + this.jsonobj, 3000);\n        })\n        .catch(error => {\n          this.presentToast('HTTP Request Error: ' + error.error);\n        });\n\n    this.presentToast('this.doctorRegister.value.name: \\n' + this.patientRegister.value.name +\n        '\\nthis.doctorRegister.value.email:\\n' + this.patientRegister.value.email +\n        '\\nthis.doctorRegister.value.type:\\n' + 'doctor', 3000);\n\n    this.router.navigateByUrl('/home-patient', { replaceUrl: true });\n  }\n\n  // Easy access for form fields\n  get dname() {\n    return this.doctorRegister.get('name');\n  }\n\n  get dlname() {\n    return this.doctorRegister.get('lastname');\n  }\n\n  get dstreet() {\n    return this.doctorRegister.get('street');\n  }\n\n  get dcp() {\n    return this.doctorRegister.get('cp');\n  }\n\n  get cprof() {\n    return this.doctorRegister.get('cedprof');\n  }\n\n  get demail() {\n    return this.doctorRegister.get('email');\n  }\n\n  get dpassword() {\n    return this.doctorRegister.get('password');\n  }\n\n  get pname() {\n    return this.patientRegister.get('name');\n  }\n\n  get plname() {\n    return this.patientRegister.get('lastname');\n  }\n\n  get pnss() {\n    return this.patientRegister.get('nss');\n  }\n\n  get ppoliza() {\n    return this.patientRegister.get('poliza');\n  }\n\n  get pemail() {\n    return this.patientRegister.get('email');\n  }\n\n  get ppassword() {\n    return this.patientRegister.get('password');\n  }\n}\n"],"sourceRoot":""}